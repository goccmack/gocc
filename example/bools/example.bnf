//Copyright 2012 Vastech SA (PTY) LTD
//
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in writing, software
//   distributed under the License is distributed on an "AS IS" BASIS,
//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//   See the License for the specific language governing permissions and
//   limitations under the License.

int_lit : _digit {_digit} ;

_digit : '0'-'9' ;

string_lit : '"' {.} '"' ;

!whitespace : ' ' | '\t' | '\n' | '\r' ;

<<import "github.com/goccmack/gocc/example/bools/ast">>

BoolExpr
	:	BoolExpr1													<< $0, nil >>
	;
	
BoolExpr1
	:	Val															<< $0, nil >>
	|	BoolExpr "&" BoolExpr1										<< ast.NewBoolAndExpr($0, $2) >>
	|	BoolExpr "|" BoolExpr1										<< ast.NewBoolOrExpr($0, $2) >>
	|	"(" BoolExpr ")"											<< ast.NewBoolGroupExpr($1) >>
	;

Val
	: "true"														<< ast.TRUE, nil >>
	| "false"														<< ast.FALSE, nil >>
	| CompareExpr													<< $0, nil >>
	| SubStringExpr 												<< $0, nil >>
	;

CompareExpr
	:   int_lit "<" int_lit											<< ast.NewLessThanExpr($0, $2) >>
	|   int_lit ">" int_lit											<< ast.NewLessThanExpr($2, $0) >>
	;

SubStringExpr
	:	string_lit "in" string_lit									<< ast.NewSubStringExpr($0, $2) >>
	;
