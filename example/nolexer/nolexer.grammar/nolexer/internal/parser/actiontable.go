// Code generated by gocc; DO NOT EDIT.

package parser

type (
	actionTable [numStates]actionRow
	cdFunc      func(TokenStream, interface{}) (interface{}, error, []byte)
	cdAction    struct {
		tokenIndex   int
		tokenScanner cdFunc
	}
	actionRow struct {
		canRecover bool
		actions    [numSymbols]action
		cdActions  []cdAction
	}
	actions struct {
		table actionTable
	}
)

var parserActions = actions{
	table: actionTable{
		actionRow{ // S0
			canRecover: false,
			actions: [numSymbols]action{
				nil,      // ά<INVALID>
				nil,      // Ω<EOF>
				nil,      // name
				shift(3), // "hello"
				shift(4), // "hiya"
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S1
			canRecover: false,
			actions: [numSymbols]action{
				nil,          // ά<INVALID>
				accept(true), // Ω<EOF>
				nil,          // name
				nil,          // "hello"
				nil,          // "hiya"
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S2
			canRecover: false,
			actions: [numSymbols]action{
				nil,      // ά<INVALID>
				nil,      // Ω<EOF>
				shift(5), // name
				nil,      // "hello"
				nil,      // "hiya"
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S3
			canRecover: false,
			actions: [numSymbols]action{
				nil,       // ά<INVALID>
				nil,       // Ω<EOF>
				reduce(2), // name, reduce: Saying
				nil,       // "hello"
				nil,       // "hiya"
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S4
			canRecover: false,
			actions: [numSymbols]action{
				nil,       // ά<INVALID>
				nil,       // Ω<EOF>
				reduce(3), // name, reduce: Saying
				nil,       // "hello"
				nil,       // "hiya"
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S5
			canRecover: false,
			actions: [numSymbols]action{
				nil,       // ά<INVALID>
				reduce(1), // Ω<EOF>, reduce: Hello
				nil,       // name
				nil,       // "hello"
				nil,       // "hiya"
			},
			cdActions: []cdAction{},
		},
	},
}
