// Code generated by gocc; DO NOT EDIT.

package lexer

import (
	"fmt"

	"github.com/maxcalandrelli/gocc/example/sr/internal/token"
)

type ActionTable [NumStates]ActionRow

type ActionRow struct {
	Accept token.Type
	Ignore string
}

func (a ActionRow) String() string {
	return fmt.Sprintf("Accept=%d, Ignore=%s", a.Accept, a.Ignore)
}

var ActTab = ActionTable{
	ActionRow{ // S0, 
		Accept: 0,
		Ignore: "",
	},
	ActionRow{ // S1, Ignore("!whitespace")
		Accept: -1,
		Ignore: "!whitespace",
	},
	ActionRow{ // S2, Accept("id")
		Accept: 3,
		Ignore: "",
	},
	ActionRow{ // S3, Accept("id")
		Accept: 3,
		Ignore: "",
	},
	ActionRow{ // S4, Accept("id")
		Accept: 3,
		Ignore: "",
	},
	ActionRow{ // S5, Accept("id")
		Accept: 3,
		Ignore: "",
	},
	ActionRow{ // S6, Accept("id")
		Accept: 3,
		Ignore: "",
	},
	ActionRow{ // S7, Accept("id")
		Accept: 3,
		Ignore: "",
	},
	ActionRow{ // S8, Accept("id")
		Accept: 3,
		Ignore: "",
	},
	ActionRow{ // S9, Accept("id")
		Accept: 3,
		Ignore: "",
	},
	ActionRow{ // S10, Accept("id")
		Accept: 3,
		Ignore: "",
	},
	ActionRow{ // S11, Accept("Λ<if>")
		Accept: 2,
		Ignore: "",
	},
	ActionRow{ // S12, Accept("id")
		Accept: 3,
		Ignore: "",
	},
	ActionRow{ // S13, Accept("id")
		Accept: 3,
		Ignore: "",
	},
	ActionRow{ // S14, Accept("id")
		Accept: 3,
		Ignore: "",
	},
	ActionRow{ // S15, Accept("Λ<else>")
		Accept: 5,
		Ignore: "",
	},
	ActionRow{ // S16, Accept("Λ<then>")
		Accept: 4,
		Ignore: "",
	},
}
