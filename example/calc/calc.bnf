/* Lexical part */

_digit : '0'-'9' ;

int64 : '1'-'9' {_digit} ;

!whitespace : ' ' | '\t' | '\n' | '\r' ;

/* Syntax part */

<<
import(
	"github.com/maxcalandrelli/gocc/example/calc/calc.grammar/calc/internal/token"
	"github.com/maxcalandrelli/gocc/example/calc/calc.grammar/calc/internal/util"
)
>>

Calc : Expr;

Expr :
		Term "+" Term	<< $0.(int64) + $2.(int64), nil >>
	|	Term "-" Term	<< $0.(int64) - $2.(int64), nil >>
	|	"-" Term		<< -$1.(int64), nil >>
	|	Term "*" Factor	<< $0.(int64) * $2.(int64), nil >>
	|	Term "/" Factor	<< $0.(int64) / $2.(int64), nil >>
	|	Term			<< $0.(int64), nil >>
;

Term :
		Term "*" Factor	<< $0.(int64) * $2.(int64), nil >>
	|	Factor
;

Factor :
		"(" Expr ")"	<< $1, nil >>
	|	int64			<< util.IntValue($0.(*token.Token).Lit) >>
;
