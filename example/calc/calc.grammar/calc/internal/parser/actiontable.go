// Code generated by gocc; DO NOT EDIT.

package parser

type (
	actionTable [numStates]actionRow
	cdFunc      func(TokenStream, interface{}) (interface{}, error, int)
	cdAction    struct {
		tokenIndex   int
		tokenScanner cdFunc
	}
	actionRow struct {
		canRecover bool
		actions    [numSymbols]action
		cdActions  []cdAction
	}
	actions struct {
		table actionTable
	}
)

var parserActions = actions{
	table: actionTable{
		actionRow{ // S0
			canRecover: false,
			actions: [numSymbols]action{
				nil,      // ά<INVALID>
				nil,      // Ω<EOF>
				nil,      // "+"
				nil,      // "*"
				shift(5), // "("
				nil,      // ")"
				shift(6), // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S1
			canRecover: false,
			actions: [numSymbols]action{
				nil,          // ά<INVALID>
				accept(true), // Ω<EOF>
				nil,          // "+"
				nil,          // "*"
				nil,          // "("
				nil,          // ")"
				nil,          // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S2
			canRecover: false,
			actions: [numSymbols]action{
				nil,       // ά<INVALID>
				reduce(1), // Ω<EOF>, reduce: Calc
				shift(7),  // "+"
				nil,       // "*"
				nil,       // "("
				nil,       // ")"
				nil,       // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S3
			canRecover: false,
			actions: [numSymbols]action{
				nil,       // ά<INVALID>
				reduce(3), // Ω<EOF>, reduce: Expr
				reduce(3), // "+", reduce: Expr
				shift(8),  // "*"
				nil,       // "("
				nil,       // ")"
				nil,       // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S4
			canRecover: false,
			actions: [numSymbols]action{
				nil,       // ά<INVALID>
				reduce(5), // Ω<EOF>, reduce: Term
				reduce(5), // "+", reduce: Term
				reduce(5), // "*", reduce: Term
				nil,       // "("
				nil,       // ")"
				nil,       // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S5
			canRecover: false,
			actions: [numSymbols]action{
				nil,       // ά<INVALID>
				nil,       // Ω<EOF>
				nil,       // "+"
				nil,       // "*"
				shift(12), // "("
				nil,       // ")"
				shift(13), // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S6
			canRecover: false,
			actions: [numSymbols]action{
				nil,       // ά<INVALID>
				reduce(7), // Ω<EOF>, reduce: Factor
				reduce(7), // "+", reduce: Factor
				reduce(7), // "*", reduce: Factor
				nil,       // "("
				nil,       // ")"
				nil,       // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S7
			canRecover: false,
			actions: [numSymbols]action{
				nil,      // ά<INVALID>
				nil,      // Ω<EOF>
				nil,      // "+"
				nil,      // "*"
				shift(5), // "("
				nil,      // ")"
				shift(6), // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S8
			canRecover: false,
			actions: [numSymbols]action{
				nil,      // ά<INVALID>
				nil,      // Ω<EOF>
				nil,      // "+"
				nil,      // "*"
				shift(5), // "("
				nil,      // ")"
				shift(6), // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S9
			canRecover: false,
			actions: [numSymbols]action{
				nil,       // ά<INVALID>
				nil,       // Ω<EOF>
				shift(16), // "+"
				nil,       // "*"
				nil,       // "("
				shift(17), // ")"
				nil,       // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S10
			canRecover: false,
			actions: [numSymbols]action{
				nil,       // ά<INVALID>
				nil,       // Ω<EOF>
				reduce(3), // "+", reduce: Expr
				shift(18), // "*"
				nil,       // "("
				reduce(3), // ")", reduce: Expr
				nil,       // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S11
			canRecover: false,
			actions: [numSymbols]action{
				nil,       // ά<INVALID>
				nil,       // Ω<EOF>
				reduce(5), // "+", reduce: Term
				reduce(5), // "*", reduce: Term
				nil,       // "("
				reduce(5), // ")", reduce: Term
				nil,       // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S12
			canRecover: false,
			actions: [numSymbols]action{
				nil,       // ά<INVALID>
				nil,       // Ω<EOF>
				nil,       // "+"
				nil,       // "*"
				shift(12), // "("
				nil,       // ")"
				shift(13), // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S13
			canRecover: false,
			actions: [numSymbols]action{
				nil,       // ά<INVALID>
				nil,       // Ω<EOF>
				reduce(7), // "+", reduce: Factor
				reduce(7), // "*", reduce: Factor
				nil,       // "("
				reduce(7), // ")", reduce: Factor
				nil,       // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S14
			canRecover: false,
			actions: [numSymbols]action{
				nil,       // ά<INVALID>
				reduce(2), // Ω<EOF>, reduce: Expr
				reduce(2), // "+", reduce: Expr
				shift(8),  // "*"
				nil,       // "("
				nil,       // ")"
				nil,       // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S15
			canRecover: false,
			actions: [numSymbols]action{
				nil,       // ά<INVALID>
				reduce(4), // Ω<EOF>, reduce: Term
				reduce(4), // "+", reduce: Term
				reduce(4), // "*", reduce: Term
				nil,       // "("
				nil,       // ")"
				nil,       // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S16
			canRecover: false,
			actions: [numSymbols]action{
				nil,       // ά<INVALID>
				nil,       // Ω<EOF>
				nil,       // "+"
				nil,       // "*"
				shift(12), // "("
				nil,       // ")"
				shift(13), // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S17
			canRecover: false,
			actions: [numSymbols]action{
				nil,       // ά<INVALID>
				reduce(6), // Ω<EOF>, reduce: Factor
				reduce(6), // "+", reduce: Factor
				reduce(6), // "*", reduce: Factor
				nil,       // "("
				nil,       // ")"
				nil,       // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S18
			canRecover: false,
			actions: [numSymbols]action{
				nil,       // ά<INVALID>
				nil,       // Ω<EOF>
				nil,       // "+"
				nil,       // "*"
				shift(12), // "("
				nil,       // ")"
				shift(13), // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S19
			canRecover: false,
			actions: [numSymbols]action{
				nil,       // ά<INVALID>
				nil,       // Ω<EOF>
				shift(16), // "+"
				nil,       // "*"
				nil,       // "("
				shift(22), // ")"
				nil,       // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S20
			canRecover: false,
			actions: [numSymbols]action{
				nil,       // ά<INVALID>
				nil,       // Ω<EOF>
				reduce(2), // "+", reduce: Expr
				shift(18), // "*"
				nil,       // "("
				reduce(2), // ")", reduce: Expr
				nil,       // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S21
			canRecover: false,
			actions: [numSymbols]action{
				nil,       // ά<INVALID>
				nil,       // Ω<EOF>
				reduce(4), // "+", reduce: Term
				reduce(4), // "*", reduce: Term
				nil,       // "("
				reduce(4), // ")", reduce: Term
				nil,       // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S22
			canRecover: false,
			actions: [numSymbols]action{
				nil,       // ά<INVALID>
				nil,       // Ω<EOF>
				reduce(6), // "+", reduce: Factor
				reduce(6), // "*", reduce: Factor
				nil,       // "("
				reduce(6), // ")", reduce: Factor
				nil,       // int64
			},
			cdActions: []cdAction{},
		},
	},
}
