// Code generated by gocc; DO NOT EDIT.

package parser

type (
	actionTable [numStates]actionRow
	cdFunc      func(TokenStream, interface{}) (interface{}, error, []byte)
	cdAction    struct {
		tokenIndex   int
		tokenScanner cdFunc
	}
	actionRow struct {
		canRecover bool
		actions    [numSymbols]action
		cdActions  []cdAction
	}
	actions struct {
		table actionTable
	}
)

var parserActions = actions{
	table: actionTable{
		actionRow{ // S0
			canRecover: false,
			actions: [numSymbols]action{
				nil,      // ά<INVALID>
				nil,      // Ω<EOF>
				nil,      // "+"
				shift(5), // "-"
				nil,      // "*"
				nil,      // "/"
				shift(6), // "("
				nil,      // ")"
				shift(7), // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S1
			canRecover: false,
			actions: [numSymbols]action{
				nil,          // ά<INVALID>
				accept(true), // Ω<EOF>
				nil,          // "+"
				nil,          // "-"
				nil,          // "*"
				nil,          // "/"
				nil,          // "("
				nil,          // ")"
				nil,          // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S2
			canRecover: false,
			actions: [numSymbols]action{
				nil,       // ά<INVALID>
				reduce(1), // Ω<EOF>, reduce: Calc
				nil,       // "+"
				nil,       // "-"
				nil,       // "*"
				nil,       // "/"
				nil,       // "("
				nil,       // ")"
				nil,       // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S3
			canRecover: false,
			actions: [numSymbols]action{
				nil,       // ά<INVALID>
				reduce(7), // Ω<EOF>, reduce: Expr
				shift(8),  // "+"
				shift(9),  // "-"
				shift(10), // "*"
				shift(11), // "/"
				nil,       // "("
				nil,       // ")"
				nil,       // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S4
			canRecover: false,
			actions: [numSymbols]action{
				nil,       // ά<INVALID>
				reduce(9), // Ω<EOF>, reduce: Term
				reduce(9), // "+", reduce: Term
				reduce(9), // "-", reduce: Term
				reduce(9), // "*", reduce: Term
				reduce(9), // "/", reduce: Term
				nil,       // "("
				nil,       // ")"
				nil,       // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S5
			canRecover: false,
			actions: [numSymbols]action{
				nil,       // ά<INVALID>
				nil,       // Ω<EOF>
				nil,       // "+"
				nil,       // "-"
				nil,       // "*"
				nil,       // "/"
				shift(14), // "("
				nil,       // ")"
				shift(15), // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S6
			canRecover: false,
			actions: [numSymbols]action{
				nil,       // ά<INVALID>
				nil,       // Ω<EOF>
				nil,       // "+"
				shift(19), // "-"
				nil,       // "*"
				nil,       // "/"
				shift(20), // "("
				nil,       // ")"
				shift(21), // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S7
			canRecover: false,
			actions: [numSymbols]action{
				nil,        // ά<INVALID>
				reduce(11), // Ω<EOF>, reduce: Factor
				reduce(11), // "+", reduce: Factor
				reduce(11), // "-", reduce: Factor
				reduce(11), // "*", reduce: Factor
				reduce(11), // "/", reduce: Factor
				nil,        // "("
				nil,        // ")"
				nil,        // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S8
			canRecover: false,
			actions: [numSymbols]action{
				nil,       // ά<INVALID>
				nil,       // Ω<EOF>
				nil,       // "+"
				nil,       // "-"
				nil,       // "*"
				nil,       // "/"
				shift(14), // "("
				nil,       // ")"
				shift(15), // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S9
			canRecover: false,
			actions: [numSymbols]action{
				nil,       // ά<INVALID>
				nil,       // Ω<EOF>
				nil,       // "+"
				nil,       // "-"
				nil,       // "*"
				nil,       // "/"
				shift(14), // "("
				nil,       // ")"
				shift(15), // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S10
			canRecover: false,
			actions: [numSymbols]action{
				nil,      // ά<INVALID>
				nil,      // Ω<EOF>
				nil,      // "+"
				nil,      // "-"
				nil,      // "*"
				nil,      // "/"
				shift(6), // "("
				nil,      // ")"
				shift(7), // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S11
			canRecover: false,
			actions: [numSymbols]action{
				nil,       // ά<INVALID>
				nil,       // Ω<EOF>
				nil,       // "+"
				nil,       // "-"
				nil,       // "*"
				nil,       // "/"
				shift(26), // "("
				nil,       // ")"
				shift(27), // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S12
			canRecover: false,
			actions: [numSymbols]action{
				nil,       // ά<INVALID>
				reduce(4), // Ω<EOF>, reduce: Expr
				nil,       // "+"
				nil,       // "-"
				shift(28), // "*"
				nil,       // "/"
				nil,       // "("
				nil,       // ")"
				nil,       // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S13
			canRecover: false,
			actions: [numSymbols]action{
				nil,       // ά<INVALID>
				reduce(9), // Ω<EOF>, reduce: Term
				nil,       // "+"
				nil,       // "-"
				reduce(9), // "*", reduce: Term
				nil,       // "/"
				nil,       // "("
				nil,       // ")"
				nil,       // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S14
			canRecover: false,
			actions: [numSymbols]action{
				nil,       // ά<INVALID>
				nil,       // Ω<EOF>
				nil,       // "+"
				shift(19), // "-"
				nil,       // "*"
				nil,       // "/"
				shift(20), // "("
				nil,       // ")"
				shift(21), // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S15
			canRecover: false,
			actions: [numSymbols]action{
				nil,        // ά<INVALID>
				reduce(11), // Ω<EOF>, reduce: Factor
				nil,        // "+"
				nil,        // "-"
				reduce(11), // "*", reduce: Factor
				nil,        // "/"
				nil,        // "("
				nil,        // ")"
				nil,        // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S16
			canRecover: false,
			actions: [numSymbols]action{
				nil,       // ά<INVALID>
				nil,       // Ω<EOF>
				nil,       // "+"
				nil,       // "-"
				nil,       // "*"
				nil,       // "/"
				nil,       // "("
				shift(30), // ")"
				nil,       // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S17
			canRecover: false,
			actions: [numSymbols]action{
				nil,       // ά<INVALID>
				nil,       // Ω<EOF>
				shift(31), // "+"
				shift(32), // "-"
				shift(33), // "*"
				shift(34), // "/"
				nil,       // "("
				reduce(7), // ")", reduce: Expr
				nil,       // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S18
			canRecover: false,
			actions: [numSymbols]action{
				nil,       // ά<INVALID>
				nil,       // Ω<EOF>
				reduce(9), // "+", reduce: Term
				reduce(9), // "-", reduce: Term
				reduce(9), // "*", reduce: Term
				reduce(9), // "/", reduce: Term
				nil,       // "("
				reduce(9), // ")", reduce: Term
				nil,       // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S19
			canRecover: false,
			actions: [numSymbols]action{
				nil,       // ά<INVALID>
				nil,       // Ω<EOF>
				nil,       // "+"
				nil,       // "-"
				nil,       // "*"
				nil,       // "/"
				shift(37), // "("
				nil,       // ")"
				shift(38), // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S20
			canRecover: false,
			actions: [numSymbols]action{
				nil,       // ά<INVALID>
				nil,       // Ω<EOF>
				nil,       // "+"
				shift(19), // "-"
				nil,       // "*"
				nil,       // "/"
				shift(20), // "("
				nil,       // ")"
				shift(21), // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S21
			canRecover: false,
			actions: [numSymbols]action{
				nil,        // ά<INVALID>
				nil,        // Ω<EOF>
				reduce(11), // "+", reduce: Factor
				reduce(11), // "-", reduce: Factor
				reduce(11), // "*", reduce: Factor
				reduce(11), // "/", reduce: Factor
				nil,        // "("
				reduce(11), // ")", reduce: Factor
				nil,        // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S22
			canRecover: false,
			actions: [numSymbols]action{
				nil,       // ά<INVALID>
				reduce(2), // Ω<EOF>, reduce: Expr
				nil,       // "+"
				nil,       // "-"
				shift(28), // "*"
				nil,       // "/"
				nil,       // "("
				nil,       // ")"
				nil,       // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S23
			canRecover: false,
			actions: [numSymbols]action{
				nil,       // ά<INVALID>
				reduce(3), // Ω<EOF>, reduce: Expr
				nil,       // "+"
				nil,       // "-"
				shift(28), // "*"
				nil,       // "/"
				nil,       // "("
				nil,       // ")"
				nil,       // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S24
			canRecover: false,
			actions: [numSymbols]action{
				nil,       // ά<INVALID>
				reduce(5), // Ω<EOF>, reduce: Expr
				reduce(8), // "+", reduce: Term
				reduce(8), // "-", reduce: Term
				reduce(8), // "*", reduce: Term
				reduce(8), // "/", reduce: Term
				nil,       // "("
				nil,       // ")"
				nil,       // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S25
			canRecover: false,
			actions: [numSymbols]action{
				nil,       // ά<INVALID>
				reduce(6), // Ω<EOF>, reduce: Expr
				nil,       // "+"
				nil,       // "-"
				nil,       // "*"
				nil,       // "/"
				nil,       // "("
				nil,       // ")"
				nil,       // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S26
			canRecover: false,
			actions: [numSymbols]action{
				nil,       // ά<INVALID>
				nil,       // Ω<EOF>
				nil,       // "+"
				shift(19), // "-"
				nil,       // "*"
				nil,       // "/"
				shift(20), // "("
				nil,       // ")"
				shift(21), // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S27
			canRecover: false,
			actions: [numSymbols]action{
				nil,        // ά<INVALID>
				reduce(11), // Ω<EOF>, reduce: Factor
				nil,        // "+"
				nil,        // "-"
				nil,        // "*"
				nil,        // "/"
				nil,        // "("
				nil,        // ")"
				nil,        // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S28
			canRecover: false,
			actions: [numSymbols]action{
				nil,       // ά<INVALID>
				nil,       // Ω<EOF>
				nil,       // "+"
				nil,       // "-"
				nil,       // "*"
				nil,       // "/"
				shift(14), // "("
				nil,       // ")"
				shift(15), // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S29
			canRecover: false,
			actions: [numSymbols]action{
				nil,       // ά<INVALID>
				nil,       // Ω<EOF>
				nil,       // "+"
				nil,       // "-"
				nil,       // "*"
				nil,       // "/"
				nil,       // "("
				shift(42), // ")"
				nil,       // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S30
			canRecover: false,
			actions: [numSymbols]action{
				nil,        // ά<INVALID>
				reduce(10), // Ω<EOF>, reduce: Factor
				reduce(10), // "+", reduce: Factor
				reduce(10), // "-", reduce: Factor
				reduce(10), // "*", reduce: Factor
				reduce(10), // "/", reduce: Factor
				nil,        // "("
				nil,        // ")"
				nil,        // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S31
			canRecover: false,
			actions: [numSymbols]action{
				nil,       // ά<INVALID>
				nil,       // Ω<EOF>
				nil,       // "+"
				nil,       // "-"
				nil,       // "*"
				nil,       // "/"
				shift(37), // "("
				nil,       // ")"
				shift(38), // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S32
			canRecover: false,
			actions: [numSymbols]action{
				nil,       // ά<INVALID>
				nil,       // Ω<EOF>
				nil,       // "+"
				nil,       // "-"
				nil,       // "*"
				nil,       // "/"
				shift(37), // "("
				nil,       // ")"
				shift(38), // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S33
			canRecover: false,
			actions: [numSymbols]action{
				nil,       // ά<INVALID>
				nil,       // Ω<EOF>
				nil,       // "+"
				nil,       // "-"
				nil,       // "*"
				nil,       // "/"
				shift(20), // "("
				nil,       // ")"
				shift(21), // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S34
			canRecover: false,
			actions: [numSymbols]action{
				nil,       // ά<INVALID>
				nil,       // Ω<EOF>
				nil,       // "+"
				nil,       // "-"
				nil,       // "*"
				nil,       // "/"
				shift(47), // "("
				nil,       // ")"
				shift(48), // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S35
			canRecover: false,
			actions: [numSymbols]action{
				nil,       // ά<INVALID>
				nil,       // Ω<EOF>
				nil,       // "+"
				nil,       // "-"
				shift(49), // "*"
				nil,       // "/"
				nil,       // "("
				reduce(4), // ")", reduce: Expr
				nil,       // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S36
			canRecover: false,
			actions: [numSymbols]action{
				nil,       // ά<INVALID>
				nil,       // Ω<EOF>
				nil,       // "+"
				nil,       // "-"
				reduce(9), // "*", reduce: Term
				nil,       // "/"
				nil,       // "("
				reduce(9), // ")", reduce: Term
				nil,       // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S37
			canRecover: false,
			actions: [numSymbols]action{
				nil,       // ά<INVALID>
				nil,       // Ω<EOF>
				nil,       // "+"
				shift(19), // "-"
				nil,       // "*"
				nil,       // "/"
				shift(20), // "("
				nil,       // ")"
				shift(21), // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S38
			canRecover: false,
			actions: [numSymbols]action{
				nil,        // ά<INVALID>
				nil,        // Ω<EOF>
				nil,        // "+"
				nil,        // "-"
				reduce(11), // "*", reduce: Factor
				nil,        // "/"
				nil,        // "("
				reduce(11), // ")", reduce: Factor
				nil,        // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S39
			canRecover: false,
			actions: [numSymbols]action{
				nil,       // ά<INVALID>
				nil,       // Ω<EOF>
				nil,       // "+"
				nil,       // "-"
				nil,       // "*"
				nil,       // "/"
				nil,       // "("
				shift(51), // ")"
				nil,       // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S40
			canRecover: false,
			actions: [numSymbols]action{
				nil,       // ά<INVALID>
				nil,       // Ω<EOF>
				nil,       // "+"
				nil,       // "-"
				nil,       // "*"
				nil,       // "/"
				nil,       // "("
				shift(52), // ")"
				nil,       // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S41
			canRecover: false,
			actions: [numSymbols]action{
				nil,       // ά<INVALID>
				reduce(8), // Ω<EOF>, reduce: Term
				nil,       // "+"
				nil,       // "-"
				reduce(8), // "*", reduce: Term
				nil,       // "/"
				nil,       // "("
				nil,       // ")"
				nil,       // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S42
			canRecover: false,
			actions: [numSymbols]action{
				nil,        // ά<INVALID>
				reduce(10), // Ω<EOF>, reduce: Factor
				nil,        // "+"
				nil,        // "-"
				reduce(10), // "*", reduce: Factor
				nil,        // "/"
				nil,        // "("
				nil,        // ")"
				nil,        // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S43
			canRecover: false,
			actions: [numSymbols]action{
				nil,       // ά<INVALID>
				nil,       // Ω<EOF>
				nil,       // "+"
				nil,       // "-"
				shift(49), // "*"
				nil,       // "/"
				nil,       // "("
				reduce(2), // ")", reduce: Expr
				nil,       // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S44
			canRecover: false,
			actions: [numSymbols]action{
				nil,       // ά<INVALID>
				nil,       // Ω<EOF>
				nil,       // "+"
				nil,       // "-"
				shift(49), // "*"
				nil,       // "/"
				nil,       // "("
				reduce(3), // ")", reduce: Expr
				nil,       // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S45
			canRecover: false,
			actions: [numSymbols]action{
				nil,       // ά<INVALID>
				nil,       // Ω<EOF>
				reduce(8), // "+", reduce: Term
				reduce(8), // "-", reduce: Term
				reduce(8), // "*", reduce: Term
				reduce(8), // "/", reduce: Term
				nil,       // "("
				reduce(5), // ")", reduce: Expr
				nil,       // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S46
			canRecover: false,
			actions: [numSymbols]action{
				nil,       // ά<INVALID>
				nil,       // Ω<EOF>
				nil,       // "+"
				nil,       // "-"
				nil,       // "*"
				nil,       // "/"
				nil,       // "("
				reduce(6), // ")", reduce: Expr
				nil,       // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S47
			canRecover: false,
			actions: [numSymbols]action{
				nil,       // ά<INVALID>
				nil,       // Ω<EOF>
				nil,       // "+"
				shift(19), // "-"
				nil,       // "*"
				nil,       // "/"
				shift(20), // "("
				nil,       // ")"
				shift(21), // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S48
			canRecover: false,
			actions: [numSymbols]action{
				nil,        // ά<INVALID>
				nil,        // Ω<EOF>
				nil,        // "+"
				nil,        // "-"
				nil,        // "*"
				nil,        // "/"
				nil,        // "("
				reduce(11), // ")", reduce: Factor
				nil,        // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S49
			canRecover: false,
			actions: [numSymbols]action{
				nil,       // ά<INVALID>
				nil,       // Ω<EOF>
				nil,       // "+"
				nil,       // "-"
				nil,       // "*"
				nil,       // "/"
				shift(37), // "("
				nil,       // ")"
				shift(38), // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S50
			canRecover: false,
			actions: [numSymbols]action{
				nil,       // ά<INVALID>
				nil,       // Ω<EOF>
				nil,       // "+"
				nil,       // "-"
				nil,       // "*"
				nil,       // "/"
				nil,       // "("
				shift(55), // ")"
				nil,       // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S51
			canRecover: false,
			actions: [numSymbols]action{
				nil,        // ά<INVALID>
				nil,        // Ω<EOF>
				reduce(10), // "+", reduce: Factor
				reduce(10), // "-", reduce: Factor
				reduce(10), // "*", reduce: Factor
				reduce(10), // "/", reduce: Factor
				nil,        // "("
				reduce(10), // ")", reduce: Factor
				nil,        // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S52
			canRecover: false,
			actions: [numSymbols]action{
				nil,        // ά<INVALID>
				reduce(10), // Ω<EOF>, reduce: Factor
				nil,        // "+"
				nil,        // "-"
				nil,        // "*"
				nil,        // "/"
				nil,        // "("
				nil,        // ")"
				nil,        // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S53
			canRecover: false,
			actions: [numSymbols]action{
				nil,       // ά<INVALID>
				nil,       // Ω<EOF>
				nil,       // "+"
				nil,       // "-"
				nil,       // "*"
				nil,       // "/"
				nil,       // "("
				shift(56), // ")"
				nil,       // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S54
			canRecover: false,
			actions: [numSymbols]action{
				nil,       // ά<INVALID>
				nil,       // Ω<EOF>
				nil,       // "+"
				nil,       // "-"
				reduce(8), // "*", reduce: Term
				nil,       // "/"
				nil,       // "("
				reduce(8), // ")", reduce: Term
				nil,       // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S55
			canRecover: false,
			actions: [numSymbols]action{
				nil,        // ά<INVALID>
				nil,        // Ω<EOF>
				nil,        // "+"
				nil,        // "-"
				reduce(10), // "*", reduce: Factor
				nil,        // "/"
				nil,        // "("
				reduce(10), // ")", reduce: Factor
				nil,        // int64
			},
			cdActions: []cdAction{},
		},
		actionRow{ // S56
			canRecover: false,
			actions: [numSymbols]action{
				nil,        // ά<INVALID>
				nil,        // Ω<EOF>
				nil,        // "+"
				nil,        // "-"
				nil,        // "*"
				nil,        // "/"
				nil,        // "("
				reduce(10), // ")", reduce: Factor
				nil,        // int64
			},
			cdActions: []cdAction{},
		},
	},
}
